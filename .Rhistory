numvarsvals <-  lapply(X = numvarsvals,  FUN = function(X) {as.integer(unlist(str_split(X, pattern = " ")))})
# numVarLength = sapply(X = str_split(string = numvarvals, pattern = " "), length)
# numVarLength = sapply(X = numvarsvals, length)
# tmp <- str_sub(VarVals[VarDataType=="Numeric"], start = 1, end = 25)
# for(i in 1:length(numvarsvals)){
#   assign(numvars[i], as.numeric(as_vector(numvarsvals[[i]])))
# }
vls = c(txtvarvals, numvarsvals)
strng_from_v110_1 <- str_sub(string =  strng,
start = str_locate(string = strng, pattern = "~110 1")[1,1], end = str_length(string = strng))
str_sub(strng_from_v110_1, 1, 567)
StemStrings <- unlist(str_split(strng_from_v110_1, pattern = "~110 [12]")) # Split to individual variables and values at ~
StemStringsTeasers = str_sub(StemStrings, start = 1, end = 30)
ReportHeader = tibble(CreationDate = vls$v12t4, CountryCode = vls$v6t1, BaseMachineNumber = vls$v3t1,
BaseMachineId = vls$v3t2,  BaseMachineManufacturer = vls$v3t5,
BaseMachineModel = vls$v3t6, HarvesterHeadModel = vls$v3t8)
ObjectDefinition = tibble(ObjectName = vls$v21t1 ,
ObjectUserId = vls$v21t1,
ObjectStartDate = ymd_hms(vls$v16t4),
ObjectKey = as.integer(ymd_hms(vls$v16t4)),
SubObjectName = vls$v21t2,
SubObjectUserId = paste0(vls$v21t2, vls$v21t3, vls$v21t4),
SubObjectKey = 1)
# Species and Product definitions
SpeciesGroupDefinition =
tibble(SpeciesGroupName = vls$v120t1,
SpeciesGroupUserId = paste0(vls$v120t1, "#", vls$v120t3, "#", vls$v2t1),
tmp_species_nr = 1:vls$v111t1,
SpeciesGroupkey = (as.numeric(vls$v13t4)+ tmp_species_nr))
# Help-table of product groups
product_grp_species_nr = rep(1:length(vls$v125t1), vls$v125t1)
product_grp_code = integer()
for (i in 1:vls$v111t1) {
product_grp_code = c(product_grp_code, 1:vls$v125t1[i])
}
product_grp_table =
tibble(product_grp_code,
product_grp_species_nr,
ProductGroupName = vls$v127t1)
ProductDefinition =
tibble(
tmp_species_nr = rep(1:v111t1, v116t1),
tmp_product_number = as.integer(1:length(v121t1)),
ProductKey = ifelse(exists("vls$v121t6"),  as.integer(vls$v121t6),
as.integer(ymd_hms(vls$v13t4)) + tmp_product_number),
ProductName = vls$v121t1,
ProductInfo = vls$v121t2,
v126t1 = vls$v126t1,
SpeciesGroupkey =  as.integer(ymd_hms(vls$v13t4)) + tmp_species_nr,
tmp_species_name = rep(vls$v120t1, vls$v116t1))
ProductDefinition =
left_join(ProductDefinition,
product_grp_table,
by = c("tmp_species_nr" = "product_grp_species_nr",
"v126t1" = "product_grp_code"))
# .. harvested trees
Ret = list(ReportHeader, SpeciesGroupDefinition, ProductDefinition, ObjectDefinition)
return(Ret)
}
STM_VarsAndValues(list.files(pattern = ".stm")[1])
str_sub(strng_from_v110_1, 1, 567)
StemStrings <- unlist(str_split(strng_from_v110_1, pattern = "~110 [12]")) # Split to individual variables and values at ~
StemStringsTeasers = str_sub(StemStrings, start = 1, end = 30)
StemStringsTeasers
StemStrings[2]
devtools::document()
devtools::document()
StemStrings[1]
str_sub(strng_from_v110_1, 1, 567)
StemStrings <- unlist(str_split(strng_from_v110_1, pattern = "~110 2")) # Split to individual variables and values at ~
StemStringsTeasers = str_sub(StemStrings, start = 1, end = 30)
?str_extract
stst <- strng_from_v110_1
list(a = c(1,2), a = c(3,4))
alist = list(a = c(1,2), a = c(3,4))
alist
alistF$a
alist$a
stme <- new.env()
stme$stst <- strng_from_v110_1
str_extract_all(stst, pattern = '~270 1 \\d{1,4}')
?str_ends
str_replace(str_extract_all(stst, pattern = '~270 1 \\d{1,4}'), '~270 1 ')[1:4]
str_replace(str_extract_all(stst, pattern = '~270 1 \\d{1,4}'), '~270 1 ', "")[1:4]
str_replace(str_extract_all(stst, pattern = '~270 1 \\d{1,4}'), '~270 1 ', "")[1:4]
str_replace(str_extract_all(stst, pattern = '~270 1 \\d{1,4}'), '~270 1 ', '')[1:4]
str_extract_all(stst, pattern = '~270 1 \\d{1,4}')
str_replace(str_extract_all(stst, pattern = '~270 1 \\d{1,4}'), '~270 1 ', '')
fruits <- c("one apple", "two pears", "three bananas")
str_replace(fruits, "[aeiou]", "-")
str_replace(str_extract_all(stst, pattern = '~270 1 \\d{1,4}'), '~270 1 ', "")
str_extract_all(stst, pattern = '~270 1 \\d{1,4}')[1:4]
unlist(str_extract_all(stst, pattern = '~270 1 \\d{1,4}'))[1:4]
str_replace(
unlist(str_extract_all(stst, pattern = '~270 1 \\d{1,4}'))[1:4],
pattern = '~270 1 ',
replacement = "")
DBHmm = str_replace( unlist(str_extract_all(stst, pattern = '~281 1 \\d{1,4}')),
pattern = '~281 1 ',
replacement = "")
str_replace( unlist(str_extract_all(stst, pattern = '~281 1 \\d{1,4}')),
pattern = '~281 1 ',
replacement = "")
str_replace( unlist(str_extract_all(stst, pattern = '~281 2 \\d{1,4}')),
pattern = '~281 2 ',
replacement = "")
stst[1]
str_sub(strng_from_v110_1, 1, 567)
StemStrings[1]
VarStrings <- unlist(str_split(strng_from_v110_1, pattern = "~")) # Split to individual variables and values at ~
varstrings[1]
VarStrings[1]
VarStrings[2]
VarStrings[18494]
VarStrings[18493]
VarStrings[18492]
VarStrings[18491]
VarStrings[18490]
VarStrings[18489]
VarStrings <- VarStrings[2:(length(VarStrings)-1)] #Removing the funny last tag after the last variable value
VarVals <- str_replace(string = VarStrings, pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}[ ]", replacement = "")
VarNames <- str_extract(string = VarStrings,  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
Vars <- paste0("v",str_replace(string = VarNames, pattern = "[ ]", replacement = "t") )
VarDataType = case_when(str_starts(string = VarVals, pattern = "\\n") ~ "txt", TRUE ~"Numeric")
VarVals = str_replace(string = VarVals, pattern = "\\n", replacement = '') #remove first \n in txt variables
txtvars = Vars[VarDataType=="txt"]
txtvarvals = VarVals[VarDataType=="txt"]
txtVarLength = sapply(X = str_split(string = txtvarvals, pattern = "[\\n]"), length)
txtvarvals <- as.list(txtvarvals)
names(txtvarvals) = txtvars
txtvarvals <- lapply(X = txtvarvals,  FUN = function(X) {unlist(str_split(X, pattern = "\n"))})
numvars <- Vars[VarDataType == "Numeric"]
numvarsvals <- VarVals[VarDataType=="Numeric"]
numvarsvals <- as.list(numvarsvals)
names(numvarsvals) <- numvars
numvarsvals <-  lapply(X = numvarsvals,  FUN = function(X) {as.integer(unlist(str_split(X, pattern = " ")))})
vls = c(txtvarvals, numvarsvals) # A list of all variable tags and values
StemNumber = v270t1[names(vls) == "v270t1"]
StemNumber = vls[names(vls) == "v270t1"]
StemStringVars <- unique(names(vls))
Stems =
tibble(
StemKey = if_else( "v270t2" %in% StemStringVars, unlist(vls[names(vls) == "v270t2"]),
unlist(vls[names(vls) == "v270t1"])),
StemNumber = if_else( "v270t1" %in% StemStringVars, unlist(vls[names(vls) == "v270t1"]), NA),
DBHmm = if_else( "v281t1" %in% StemStringVars, unlist(vls[names(vls) == "v281t1"]),
unlist(vls[names(vls) == "v281t2"]))
)
unlist(vls[names(vls) == "v281t2"])
Stems =
tibble(
StemKey = ifelse( "v270t2" %in% StemStringVars, unlist(vls[names(vls) == "v270t2"]),
unlist(vls[names(vls) == "v270t1"])),
StemNumber = ifelse( "v270t1" %in% StemStringVars, unlist(vls[names(vls) == "v270t1"]), NA),
DBHmm = ifelse( "v281t1" %in% StemStringVars, unlist(vls[names(vls) == "v281t1"]),
unlist(vls[names(vls) == "v281t2"]))
)
strng_from_v110_1 <- str_sub(string =  strng,
start = str_locate(string = strng, pattern = "~110 1")[1,1], end = str_length(string = strng))
VarStrings <- unlist(str_split(strng_from_v110_1, pattern = "~")) # Split to individual variables and values at ~
VarStrings <- VarStrings[2:(length(VarStrings)-1)] #Removing the funny last tag after the last variable value
VarVals <- str_replace(string = VarStrings, pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}[ ]", replacement = "")
VarNames <- str_extract(string = VarStrings,  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
Vars <- paste0("v",str_replace(string = VarNames, pattern = "[ ]", replacement = "t") )
VarDataType = case_when(str_starts(string = VarVals, pattern = "\\n") ~ "txt", TRUE ~"Numeric")
VarVals = str_replace(string = VarVals, pattern = "\\n", replacement = '') #remove first \n in txt variables
txtvars = Vars[VarDataType=="txt"]
txtvarvals = VarVals[VarDataType=="txt"]
txtVarLength = sapply(X = str_split(string = txtvarvals, pattern = "[\\n]"), length)
txtvarvals <- as.list(txtvarvals)
names(txtvarvals) = txtvars
txtvarvals <- lapply(X = txtvarvals,  FUN = function(X) {unlist(str_split(X, pattern = "\n"))})
numvars <- Vars[VarDataType == "Numeric"]
numvarsvals <- VarVals[VarDataType=="Numeric"]
numvarsvals <- as.list(numvarsvals)
names(numvarsvals) <- numvars
numvarsvals <-  lapply(X = numvarsvals,  FUN = function(X) {as.integer(unlist(str_split(X, pattern = " ")))})
vls = c(txtvarvals, numvarsvals) # A list of all variable tags and values
strng <- readr::read_file(stmfilename)
if ( is.na(enc) & str_detect(string = strng, pattern = "~1 3 \nISO 8859-1")){ enc = "latin1"}
Encoding(strng) <- enc
strng <- str_replace(string = strng, pattern = '\"','') #Removing the funny tag at the very start of the string
strng_to_v110_1 <- str_sub(string =  strng,
start = 1, end = str_locate(string = strng, pattern = "~110 1")[1,1] )
VarStrings <- unlist(str_split(strng_to_v110_1, pattern = "~")) # Split to individual variables and values at ~
VarStrings <- VarStrings[1:(length(VarStrings)-1)] #Removing the funny last tag after the last variable value
VarVals <- str_replace(string = VarStrings, pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}[ ]", replacement = "")
VarNames <- str_extract(string = VarStrings,  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
Vars <- paste0("v",str_replace(string = VarNames, pattern = "[ ]", replacement = "t") )
VarDataType = case_when(str_starts(string = VarVals, pattern = "\\n") ~ "txt", TRUE ~"Numeric")
VarVals = str_replace(string = VarVals, pattern = "\\n", replacement = '') #remove first \n in txt variables
txtvars = Vars[VarDataType=="txt"]
txtvarvals = VarVals[VarDataType=="txt"]
txtVarLength = sapply(X = str_split(string = txtvarvals, pattern = "[\\n]"), length)
txtvarvals <- as.list(txtvarvals)
names(txtvarvals) = txtvars
txtvarvals <- lapply(X = txtvarvals,  FUN = function(X) {unlist(str_split(X, pattern = "\n"))})
numvars <- Vars[VarDataType == "Numeric"]
numvarsvals <- VarVals[VarDataType=="Numeric"]
numvarsvals <- as.list(numvarsvals)
names(numvarsvals) <- numvars
numvarsvals <-  lapply(X = numvarsvals,  FUN = function(X) {as.integer(unlist(str_split(X, pattern = " ")))})
vls = c(txtvarvals, numvarsvals) # A list of all variable tags and values
obj_start_second = as.integer(ymd_hms(vls$v16t4))
ReportHeader = tibble(CreationDate = vls$v12t4, CountryCode = vls$v6t1, BaseMachineNumber = vls$v3t1,
BaseMachineId = vls$v3t2,  BaseMachineManufacturer = vls$v3t5,
BaseMachineModel = vls$v3t6, HarvesterHeadModel = vls$v3t8)
ObjectDefinition = tibble(ObjectName = vls$v21t1 ,
ObjectUserId = vls$v21t1,
ObjectStartDate = ymd_hms(vls$v16t4),
ObjectKey = obj_start_second,
SubObjectName = vls$v21t2,
SubObjectUserId = paste0(vls$v21t2, vls$v21t3, vls$v21t4),
SubObjectKey = 1)
SpeciesGroupDefinition =
tibble(SpeciesGroupName = vls$v120t1,
SpeciesGroupUserId = paste0(vls$v120t1, "#", vls$v120t3, "#", vls$v2t1),
tmp_species_nr = 1:vls$v111t1,
SpeciesGroupkey = obj_start_second + tmp_species_nr)
product_grp_species_nr = rep(1:length(vls$v125t1), vls$v125t1)
product_grp_code = integer()
for (i in 1:vls$v111t1) {
product_grp_code = c(product_grp_code, 1:vls$v125t1[i])
}
product_grp_table =
tibble(product_grp_code,
product_grp_species_nr,
ProductGroupName = vls$v127t1)
ProductDefinition =
tibble(
tmp_species_nr = rep(1:v111t1, v116t1),
tmp_product_number = as.integer(1:length(v121t1)),
ProductKey = ifelse(exists("vls$v121t6"),  as.integer(vls$v121t6),
obj_start_second + tmp_product_number),
ProductName = vls$v121t1,
ProductInfo = vls$v121t2,
v126t1 = vls$v126t1,
SpeciesGroupkey =  obj_start_second + tmp_species_nr,
tmp_species_name = rep(vls$v120t1, vls$v116t1))
ProductDefinition =
left_join(ProductDefinition,
product_grp_table,
by = c("tmp_species_nr" = "product_grp_species_nr",
"v126t1" = "product_grp_code"))
strng_from_v110_1 <- str_sub(string =  strng,
start = str_locate(string = strng, pattern = "~110 1")[1,1], end = str_length(string = strng))
VarStrings <- unlist(str_split(strng_from_v110_1, pattern = "~")) # Split to individual variables and values at ~
VarStrings <- VarStrings[2:(length(VarStrings)-1)] #Removing the funny last tag after the last variable value
VarVals <- str_replace(string = VarStrings, pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}[ ]", replacement = "")
VarNames <- str_extract(string = VarStrings,  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
Vars <- paste0("v",str_replace(string = VarNames, pattern = "[ ]", replacement = "t") )
VarDataType = case_when(str_starts(string = VarVals, pattern = "\\n") ~ "txt", TRUE ~"Numeric")
VarVals = str_replace(string = VarVals, pattern = "\\n", replacement = '') #remove first \n in txt variables
txtvars = Vars[VarDataType=="txt"]
txtvarvals = VarVals[VarDataType=="txt"]
txtVarLength = sapply(X = str_split(string = txtvarvals, pattern = "[\\n]"), length)
txtvarvals <- as.list(txtvarvals)
names(txtvarvals) = txtvars
txtvarvals <- lapply(X = txtvarvals,  FUN = function(X) {unlist(str_split(X, pattern = "\n"))})
numvars <- Vars[VarDataType == "Numeric"]
numvarsvals <- VarVals[VarDataType=="Numeric"]
numvarsvals <- as.list(numvarsvals)
names(numvarsvals) <- numvars
numvarsvals <-  lapply(X = numvarsvals,  FUN = function(X) {as.integer(unlist(str_split(X, pattern = " ")))})
vls = c(txtvarvals, numvarsvals) # A list of all variable tags and values
stst <- strng_from_v110_1
str_sub(strng_from_v110_1, 1, 567)
StemStrings <- unlist(str_split(strng_from_v110_1, pattern = "~110 2")) # Split to individual variables and values at ~
StemStringsTeasers = str_sub(StemStrings, start = 1, end = 30)
StemStringVars <- unique(names(vls))
if (("v270t1" %in% StemStringVars) | ("v270t2" %in% StemStringVars)){
Stems =
tibble(
StemKey = ifelse( "v270t2" %in% StemStringVars, unlist(vls[names(vls) == "v270t2"]),
obj_start_second + unlist(vls[names(vls) == "v270t1"])),
StemNumber = ifelse( "v270t1" %in% StemStringVars,unlist(vls[names(vls) == "v270t1"]),
unlist(vls[names(vls) == "v270t2"]))
if  ("v281t1" %in% StemStringVars) {
Stems$DBHmm = unlist(vls[names(vls) == "v281t1"])
} else if (("v281t2" %in% StemStringVars)) {
Stems$DBHmm = unlist(vls[names(vls) == "v281t2"])
} else Stems$DBHmm = NA
} else {Stems = NULL}
Ret = list(ReportHeader, SpeciesGroupDefinition, ProductDefinition, ObjectDefinition)
return(Ret)
}
if (("v270t1" %in% StemStringVars) | ("v270t2" %in% StemStringVars)){
Stems =
tibble(
StemKey = ifelse( "v270t2" %in% StemStringVars, unlist(vls[names(vls) == "v270t2"]),
obj_start_second + unlist(vls[names(vls) == "v270t1"])),
StemNumber = ifelse( "v270t1" %in% StemStringVars,unlist(vls[names(vls) == "v270t1"]),
unlist(vls[names(vls) == "v270t2"])))
if  ("v281t1" %in% StemStringVars) {
Stems$DBHmm = unlist(vls[names(vls) == "v281t1"])
} else if (("v281t2" %in% StemStringVars)) {
Stems$DBHmm = unlist(vls[names(vls) == "v281t2"])
} else Stems$DBHmm = NA
} else {Stems = NULL}
vls[names(vls) == "v270t2"]
unlist(vls[names(vls) == "v270t2"]
)
list.files(pattern = ".stm")[1]
strng_from_v110_1 <- str_sub(string =  strng,
start = str_locate(string = strng, pattern = "~110 1")[1,1], end = str_length(string = strng))
VarStrings <- unlist(str_split(strng_from_v110_1, pattern = "~")) # Split to individual variables and values at ~
VarStrings <- VarStrings[2:(length(VarStrings)-1)] #Removing the funny last tag after the last variable value
VarVals <- str_replace(string = VarStrings, pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}[ ]", replacement = "")
VarNames <- str_extract(string = VarStrings,  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
Vars <- paste0("v",str_replace(string = VarNames, pattern = "[ ]", replacement = "t") )
VarDataType = case_when(str_starts(string = VarVals, pattern = "\\n") ~ "txt", TRUE ~"Numeric")
VarVals = str_replace(string = VarVals, pattern = "\\n", replacement = '') #remove first \n in txt variables
txtvars = Vars[VarDataType=="txt"]
txtvarvals = VarVals[VarDataType=="txt"]
txtVarLength = sapply(X = str_split(string = txtvarvals, pattern = "[\\n]"), length)
txtvarvals <- as.list(txtvarvals)
names(txtvarvals) = txtvars
txtvarvals <- lapply(X = txtvarvals,  FUN = function(X) {unlist(str_split(X, pattern = "\n"))})
numvars <- Vars[VarDataType == "Numeric"]
numvarsvals <- VarVals[VarDataType=="Numeric"]
numvarsvals <- as.list(numvarsvals)
names(numvarsvals) <- numvars
numvarsvals <-  lapply(X = numvarsvals,  FUN = function(X) {as.integer(unlist(str_split(X, pattern = " ")))})
vls = c(txtvarvals, numvarsvals) # A list of all variable tags and values
tail(vls)
stst <- strng_from_v110_1
str_sub(strng_from_v110_1, 1, 567)
StemStrings <- unlist(str_split(strng_from_v110_1, pattern = "~110 2")) # Split to individual variables and values at ~
StemStringsTeasers = str_sub(StemStrings, start = 1, end = 30)
StemStringVars <- unique(names(vls))
StemStringVars
(("v270t1" %in% StemStringVars) | ("v270t2" %in% StemStringVars))
names(vls)
Stems =
tibble(
StemKey = ifelse( "v270t2" %in% StemStringVars, unlist(vls[names(vls) == "v270t2"]),
obj_start_second + unlist(vls[names(vls) == "v270t1"])),
StemNumber = ifelse( "v270t1" %in% StemStringVars,unlist(vls[names(vls) == "v270t1"]),
unlist(vls[names(vls) == "v270t2"])))
str_extract(string = StemStrings,  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
VarNamespresent <- str_extract(string = StemStrings[1],  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
VarNamespresent
strng_from_v110_1 <- str_sub(string =  strng,
start = str_locate(string = strng, pattern = "~110 1")[1,1], end = str_length(string = strng))
str_sub(strng_from_v110_1, 1, 567)
StemStrings <- (str_split(strng_from_v110_1, pattern = "~110 2"))
StemStrings <- unlist(str_split(strng_from_v110_1, pattern = "~110 2")) # Split to one txt string per tree
StemStrings[1]
StemStrings[2]
StemStrings[3]
?str_split
unlist(strsplit(strng_from_v110_1, pattern = "(?<=~110 2)", perl = T))
unlist(str_split(strng_from_v110_1, pattern = "~110 2")) # Split to one txt string per tree
StemStrings <- unlist(strsplit(strng_from_v110_1, "(?<=~110 2)", perl = T))
unlist(strsplit(strng_from_v110_1, "(?<=~110 2)", perl = T))
unlist(strsplit(strng_from_v110_1, "(?<=~110 2)", perl = T))
unlist(strsplit(strng_from_v110_1[1], "(?<=~110 2)", perl = T))
strng_from_v110_1[1]
StemStrings <- unlist(strsplit(strng_from_v110_1, "(?<=~110 2)", perl = T)) # Split to one txt string per tree
StemStrings[1]
StemStrings[2]
StemStrings <- unlist(str_split(strng_from_v110_1, pattern = "~110 2")) # Split to one txt string per tree
StemStrings <- unlist(strsplit(strng_from_v110_1, "(~110 2?<=)", perl = T)) # Split to one txt string per tree
StemStrings <- unlist(strsplit(strng_from_v110_1, "(~110 2?<=)", perl = T)) # Split to one txt string per tree
StemStrings[1]
StemStrings <- unlist(strsplit(strng_from_v110_1, "(?~110 2=<)", perl = T))
StemStrings <- unlist(strsplit(strng_from_v110_1, "(~110 2=<?)", perl = T))
StemStrings <- unlist(strsplit(strng_from_v110_1, "(?<=~110 2)", perl = T))
StemStrings <- unlist(str_split(strng_from_v110_1, pattern = "~110")) # Split to one txt string per tree
str_extract(string = StemStrings[1],  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
StemStrings[1]
StemStrings[2]
StemStrings[3]
str_extract(string = StemStrings[2],  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
str_extract_all(string = StemStrings[2],  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
("v270t1" %in% VarNamespresent) | ("v270t2" %in% VarNamespresent))
(("v270t1" %in% VarNamespresent) | ("v270t2" %in% VarNamespresent))
VarNamespresent
VarNamespresent <- unlist(str_extract_all(string = StemStrings[2],  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" ))
VarNamespresent
(("v270t1" %in% VarNamespresent) | ("v270t2" %in% VarNamespresent))
strng_from_v110_1 <- str_sub(string =  strng,
start = str_locate(string = strng, pattern = "~110 1")[1,1], end = str_length(string = strng))
VarStrings <- unlist(str_split(strng_from_v110_1, pattern = "~")) # Split to individual variables and values at ~
VarStrings <- VarStrings[2:(length(VarStrings)-1)] #Removing the funny last tag after the last variable value
VarVals <- str_replace(string = VarStrings, pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}[ ]", replacement = "")
VarNames <- str_extract(string = VarStrings,  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
Vars <- paste0("v",str_replace(string = VarNames, pattern = "[ ]", replacement = "t") )
VarDataType = case_when(str_starts(string = VarVals, pattern = "\\n") ~ "txt", TRUE ~"Numeric")
VarVals = str_replace(string = VarVals, pattern = "\\n", replacement = '') #remove first \n in txt variables
txtvars = Vars[VarDataType=="txt"]
txtvarvals = VarVals[VarDataType=="txt"]
txtVarLength = sapply(X = str_split(string = txtvarvals, pattern = "[\\n]"), length)
txtvarvals <- as.list(txtvarvals)
names(txtvarvals) = txtvars
txtvarvals <- lapply(X = txtvarvals,  FUN = function(X) {unlist(str_split(X, pattern = "\n"))})
numvars <- Vars[VarDataType == "Numeric"]
numvarsvals <- VarVals[VarDataType=="Numeric"]
numvarsvals <- as.list(numvarsvals)
names(numvarsvals) <- numvars
numvarsvals <-  lapply(X = numvarsvals,  FUN = function(X) {as.integer(unlist(str_split(X, pattern = " ")))})
vls = c(txtvarvals, numvarsvals) # A list of all variable tags and values
unique(names(vls))
(("v270t1" %in% nvls) | ("v270t2" %in% nvls))
nvls = unique(names(vls))
(("v270t1" %in% nvls) | ("v270t2" %in% nvls))
Stems =
tibble(
StemKey = ifelse( "v270t2" %in% StemStringVars, unlist(vls[names(vls) == "v270t2"]),
obj_start_second + unlist(vls[names(vls) == "v270t1"])),
StemNumber = ifelse( "v270t1" %in% StemStringVars,unlist(vls[names(vls) == "v270t1"]),
unlist(vls[names(vls) == "v270t2"])))
unlist(vls[names(vls) == "v270t2"])
which(vls[names(vls) == "v270t2"])
which(names(vls) == "v270t2")
names(vls)
"v270t2" %in% nvls
nvls
"v270t3" %in% nvls
which(names(vls) == "v270t3")
unlist(vls[which(names(vls) == "v270t3")]))
unlist(vls[which(names(vls) == "v270t3")])
ifelse( "v270t3" %in% nvls, unlist(vls[which(names(vls) == "v270t3")]),
obj_start_second + unlist(vls[names(vls) == "v270t1"]))
"v270t3" %in% nvls
unlist(vls[which(names(vls) == "v270t3")])
ifelse( "v270t3" %in% nvls, unlist(vls[which(names(vls) == "v270t3")]),
obj_start_second + unlist(vls[which(names(vls) == "v270t1")]))
Stems =      tibble()
Stems
("v281t1" %in% nvls)
(("v281t2" %in% nvls))
rm(Stems)
if (("v270t1" %in% nvls) | ("v270t3" %in% nvls)){
Stems =      tibble()
if( "v270t3" %in% nvls) {
Stems$StemNumber =  unlist(vls[which(names(vls) == "v270t3")])
} else {
Stems$StemNumber =  unlist(vls[which(names(vls) == "v270t1")])
}
Stems$StemKey = as.integer( paste0(as.character(obj_start_second),  as.character(Stems$StemNumber)))
if  ("v281t1" %in% nvls) {
Stems$DBHmm = unlist(vls[names(vls) == "v281t1"])
} else if (("v281t2" %in% nvls)) {
Stems$DBHmm = unlist(vls[names(vls) == "v281t2"])
} else Stems$DBHmm = NA
} else {Stems = NULL}
rm(Stems)
Stems =      tibble()
if( "v270t3" %in% nvls) {
Stems$StemNumber =  unlist(vls[which(names(vls) == "v270t3")])
} else {
Stems$StemNumber =  unlist(vls[which(names(vls) == "v270t1")])
}
length(vls) / length(nvls)
length(nvls)
length(vls)
dim(vls)
?str_locate_all
strng_from_v110_1 <- str_sub(string =  strng,
start = str_locate(string = strng, pattern = "~110 1")[1,1], end = str_length(string = strng))
str_sub(strng_from_v110_1, 1, 10)
str_sub(strng_from_v110_1, -10)
str_sub(strng_from_v110_1, -10 , -1)
str_sub(strng_from_v110_1, -10 , -2)
str_sub(strng_from_v110_1, -10 , -2L)
str_sub(strng_from_v110_1, -10 , -1L)
test = str_locate_all(string = strng_from_v110_1, pattern = "~110 1")
str_sub(strng_from_v110_1, 1, 50)
str_sub(strng_from_v110_1, 1, 250)
str_sub(strng_from_v110_1, 1, 450)
str_sub(strng_from_v110_1, 1, 500)
str_sub(strng_from_v110_1, 1, 600)
start = str_locate_all(string = strng_from_v110_1, pattern = "~110")
str_locate_all(string = strng_from_v110_1, pattern = "~110")[1,1]
str_locate_all(string = strng_from_v110_1, pattern = "~110")[[1]]
start = str_locate_all(string = strng_from_v110_1, pattern = "~110")[[1]]$start
start = str_locate_all(string = strng_from_v110_1, pattern = "~110")[[1]][,1]
end = c(str_locate_all(string = strng_from_v110_1, pattern = "~110")[[1]][2:-1L,1], -1)
end = c(str_locate_all(string = strng_from_v110_1, pattern = "~110")[[1]][-1,1], -1)
end
loopstring <- str_sub(string = strng_from_v110_1,
start = str_locate_all(string = strng_from_v110_1, pattern = "~110")[[1]][,1],
end = c(str_locate_all(string = strng_from_v110_1, pattern = "~110")[[1]][-1,1], -1))
loopstring[1]
loopstring[2]
loopstring[3]
v110string = loopstrin[2]
v110string = loopstring[2]
unlist(str_split(v110string, pattern = "~"))
VarStrings <- unlist(str_split(v110string, pattern = "~"))[-1]
VarVals <- str_replace(string = VarStrings, pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}[ ]", replacement = "")
VarNames <- str_extract(string = VarStrings,  pattern = "[[:digit:]]{1,4}[ ]{1}[[:digit:]]{1,2}" )
Vars <- paste0("v",str_replace(string = VarNames, pattern = "[ ]", replacement = "t") )
VarDataType = case_when(str_starts(string = VarVals, pattern = "\\n") ~ "txt", TRUE ~"Numeric")
VarVals = str_replace(string = VarVals, pattern = "\\n", replacement = '') #remove first \n in txt variables
txtvars = Vars[VarDataType=="txt"]
txtvarvals = VarVals[VarDataType=="txt"]
txtVarLength = sapply(X = str_split(string = txtvarvals, pattern = "[\\n]"), length)
txtvarvals <- as.list(txtvarvals)
names(txtvarvals) = txtvars
txtvarvals <- lapply(X = txtvarvals,  FUN = function(X) {unlist(str_split(X, pattern = "\n"))})
numvars <- Vars[VarDataType == "Numeric"]
numvarsvals <- VarVals[VarDataType=="Numeric"]
numvarsvals <- as.list(numvarsvals)
names(numvarsvals) <- numvars
numvarsvals <-  lapply(X = numvarsvals,  FUN = function(X) {as.integer(unlist(str_split(X, pattern = " ")))})
vls = c(txtvarvals, numvarsvals) # A list of all variable tags and values
nvls = unique(names(vls))
devtools::document()
devtools::load_all()
install.packages(c("BH", "broom", "callr", "checkmate", "cli", "covr", "devtools", "digest", "dplyr", "fansi", "farver", "forcats", "fs", "ggplot2", "hms", "jsonlite", "knitr", "lifecycle", "mime", "modelr", "plyr", "prettyunits", "processx", "ps", "remotes", "rlang", "rmarkdown", "rstudioapi", "sf", "stringi", "testthat", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun", "XML", "yaml"))
